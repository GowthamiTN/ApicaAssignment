services:
  mysql-user:
    image: mysql:8
    container_name: mysql-user
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb
    ports:
      - "3307:3306"
    networks:
      - app-network

  mysql-journal:
    image: mysql:8
    container_name: mysql-journal
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: journal
    ports:
      - "3308:3306"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      kafka:
        condition: service_started
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      sleep 20 &&
      kafka-topics --create --if-not-exists --topic user-events
      --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1
    networks:
      - app-network

  user-service:
    build: ./usermangement
    container_name: usermangement
    ports:
      - "8080:8080"
    depends_on:
      - mysql-user
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-user:3306/userdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - app-network
    volumes:
      - ./usermangement:/app
      - ~/.m2:/root/.m2

  journal-service:
    build: ./journal-service
    container_name: journal-service
    ports:
      - "8081:8081"
    depends_on:
      - mysql-journal
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-journal:3306/journal
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - app-network
    volumes:
      - ./journal-service:/app
      - ~/.m2:/root/.m2

networks:
  app-network:
    driver: bridge
